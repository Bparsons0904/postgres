services:
  postgres_staging:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-postgres:16.5
    container_name: postgres_staging
    command: postgres -c 'config_file=/var/lib/postgresql/config/postgresql.conf'
    environment:
      POSTGRES_USER: ${STAGING_DB_USER}
      POSTGRES_PASSWORD: ${STAGING_DB_PASSWORD}
      POSTGRES_DB: ${STAGING_DB_NAME}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    ports:
      - "5080:5432"
    restart: unless-stopped
    networks:
      - switch-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${STAGING_DB_USER} -d ${STAGING_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "com.docker.stack.namespace=staging"
      - "com.docker.stack.monitoring=true"
    deploy: &deploy-db
      resources:
        limits:
          memory: 6G
          cpus: "4"
        reservations:
          memory: 2G
          cpus: "2"
  postgres_exporter_staging:
    build:
      context: .
      dockerfile: Dockerfile.exporter
    container_name: postgres_exporter_staging
    environment:
      DATA_SOURCE_NAME: "postgresql://${STAGING_DB_USER}:${STAGING_DB_PASSWORD}@postgres_staging:5432/${STAGING_DB_NAME}?sslmode=disable"
    ports:
      - "9187:9187"
    restart: unless-stopped
    networks:
      - switch-network
    depends_on:
      - postgres_staging
    labels:
      - "com.docker.stack.namespace=staging"
      - "com.docker.stack.monitoring=true"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
        reservations:
          memory: 128M
          cpus: "0.1"
  postgres_production:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-postgres:16.5
    container_name: postgres_production
    command: postgres -c 'config_file=/var/lib/postgresql/config/postgresql.conf'
    environment:
      POSTGRES_USER: ${PROD_DB_USER}
      POSTGRES_PASSWORD: ${PROD_DB_PASSWORD}
      POSTGRES_DB: ${PROD_DB_NAME}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    volumes:
      - postgres_production_data:/var/lib/postgresql/data
    ports:
      - "5076:5432"
    restart: unless-stopped
    networks:
      - switch-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PROD_DB_USER} -d ${PROD_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 6G
          cpus: "4"
        reservations:
          memory: 2G
          cpus: "2"
  postgres_exporter_production:
    build:
      context: .
      dockerfile: Dockerfile.exporter
    container_name: postgres_exporter_production
    environment:
      DATA_SOURCE_NAME: "postgresql://${PROD_DB_USER}:${PROD_DB_PASSWORD}@postgres_production:5432/${PROD_DB_NAME}?sslmode=disable"
    ports:
      - "9188:9187"
    restart: unless-stopped
    networks:
      - switch-network
    depends_on:
      - postgres_production
    labels:
      - "com.docker.stack.namespace=production"
      - "com.docker.stack.monitoring=true"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
        reservations:
          memory: 128M
          cpus: "0.1"
volumes:
  postgres_staging_data:
    driver: local
  postgres_production_data:
    driver: local
networks:
  switch-network:
    external: true
    name: switch-network
